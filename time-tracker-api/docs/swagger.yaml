basePath: /api/
definitions:
  auth.LoginDTO:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  clients.Client:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      projects:
        items:
          $ref: '#/definitions/clients.Project'
        type: array
      updated_at:
        type: string
    type: object
  clients.Project:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  users.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      updated_at:
        type: string
      user_name:
        type: string
    type: object
host: https://api.time-tracker.ml/
info:
  contact:
    email: lupu60@gmail.com
    name: Bogdan Lupu
  description: Time Tracker Api
  title: Time Tracker Api
  version: "1.0"
paths:
  /clients:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - clients
    post:
      consumes:
      - application/json
      parameters:
      - description: Client
        in: body
        name: client
        required: true
        schema:
          $ref: '#/definitions/clients.Client'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - clients
  /clients/:id:
    delete:
      parameters:
      - description: Client ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - clients
    get:
      parameters:
      - description: Clients ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - clients
  /login:
    post:
      parameters:
      - description: auth
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - auth
  /register:
    post:
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - auth
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/users.User'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - users
  /users/:id:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - users
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      tags:
      - users
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
